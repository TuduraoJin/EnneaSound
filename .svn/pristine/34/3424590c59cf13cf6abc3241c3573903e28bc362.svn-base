package org.xiph.frontend;

import flash.events.Event;
import flash.media.SoundTransform;

class WAVChannel extends BaseSoundChannel 
{
    private var _sch : flash.media.SoundChannel;
	private var _s:ru.etcs.media.WaveSound;
    
    public function new(sound : ru.etcs.media.WaveSound, offset:Float, volume:Float, pan:Float , loop:Int = 0) 
	{
        super();
		this._st = new SoundTransform(volume, pan);
		this._offset = offset;
		this.loop = loop;
        this._sch = sound.play(offset, cast(loop,UInt), this._st );
        this._sch.addEventListener(Event.SOUND_COMPLETE, channelComplete,false, 0, true);
		this._s = sound;
		this._isPlayed = true;
    }
	
	public override function dispose():Void
	{
		super.dispose();
		if ( _sch != null )
		{
			this._sch.removeEventListener(Event.SOUND_COMPLETE, channelComplete);
		}
		this._sch = null;
		this._s = null;
		this._isPlayed = false;

	}
	
	public override function play( inOffset:Float = -1 , inVol:Float = -1 , inPan:Float = -2 ,inLoop:Int = -1 ):Void
	{
		super.play( inOffset, inVol, inPan, inLoop);
		if ( _sch != null )
		{
			this.stop();
		}
        this._sch = _s.play( this._offset, cast(this.loop, UInt), this._st );
		if ( this._sch != null )
        {
			this._sch.addEventListener(Event.SOUND_COMPLETE, channelComplete,false, 0, true);
			this._isPlayed = true;
		}
	}
    
    public override function stop() : Void 
	{
		if ( _sch == null ) {	return;	}
        this._sch.removeEventListener(Event.SOUND_COMPLETE, channelComplete);
        this._sch.stop();
		this._sch = null;
		this._isPlayed = false;
    }

    public override function getPosition() : Float 
	{
		if ( _sch == null ) {	return 0;	}
        return this._sch.position;
    }
    
    public override function getVolume() : Float 
	{
		if ( _sch == null ) {	return this._st.volume;		}
		else {		return this._sch.soundTransform.volume;		}
    }
    
    public override function getPan() : Float 
	{
        if ( _sch == null ) {	return this._st.pan;		}
		else {		return this._sch.soundTransform.pan;		}
    }
    
    public override function setVolume(volume : Float) : Void 
	{
		if ( _sch == null ) 
		{
			this._st.volume = volume;
		}else {
			var t : SoundTransform = this._sch.soundTransform;
			t.volume = volume;
			this._sch.soundTransform = t;
		}
    }
    
    public override function setPan(pan : Float) : Void 
	{
		if ( _sch == null ) 
		{
			this._st.pan = pan;	
		}else {
			var t : SoundTransform = this._sch.soundTransform;
			t.pan = pan;
			this._sch.soundTransform = t;
		}      
    }
    
    private function channelComplete(e:Event) 
	{
		this._isPlayed = false;
		dispatchEvent( e.clone() );
    }
}
